class Cats:
    name = None  # называются поля - работает как переменные
    age = None  # называются поля - работает как переменные
    color = None  # называются поля - работает как переменные
    description = None  # называются поля - работает как переменные

    def __init__(self, name, age, color, description):
        """
        За счет конструкторов можно выполнить определенный код сразу же при создании объекта (cat1)
        Конструкторы максимально удобны для установки каких либо значений
        При создании объектов, изначально, мы в них никакие данные не передаем, данные передаются через метод,
        конструкторы сразу содержат значения для объектов

        """
        self.name = name  # чтобы обратиться к полям из строк 2-5 прописываем self. - в своем классе находим
        self.age = age
        self.color = color
        self.description = description

        self.get_data()  # Теперь после ввода всех полей, когда мы заюзали класс объектом cat1, можно дернуть метод из этого же класса и получить то что было записано

    def set_data(self, name=None, age=None, color=None, description=0):
        self.name = name  # чтобы обратиться к полям из строк 2-5 прописываем self. - в своем классе находим
        self.age = age
        self.color = color
        self.description = description

    def get_data(self):
        return print(
            "Имя кота:",
            self.name,
            "\nВозраст кота:",
            self.age,
            "\nЦвет кота:",
            self.color,
            "\nОписание кота:",
            self.description,
        )


cat1 = Cats(
    "Pavel", 5, "red", "very good\n"
)  # Теперь благодаря конструкторы __init__ мы можем сразу в класс передать дефолтные значения, по сути
# \ теперь отдельные методы по установке значений, типа set_data - не нужны, можно сразу в класс записать
cat2 = Cats("Boris", 1, "black", "good\n")

# Методы можно переопределять
# По сути переопределение методов это установка значений на входе по умолчанию
# Если в методе set_data указать дефолное знаечние параметра, то функция сможет принимать на вход меньше параметров чем указано
cat1.set_data("Norbert", 8)
cat1.get_data()
